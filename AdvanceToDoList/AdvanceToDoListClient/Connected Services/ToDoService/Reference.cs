//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AdvanceToDoListClient.ToDoService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ToDo", Namespace="http://schemas.datacontract.org/2004/07/AdvanceToDoList")]
    [System.SerializableAttribute()]
    public partial class ToDo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIdField, value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ToDoService.IToDoService")]
    public interface IToDoService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IToDoService/GetToDo", ReplyAction="http://tempuri.org/IToDoService/GetToDoResponse")]
        AdvanceToDoListClient.ToDoService.ToDo GetToDo(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IToDoService/GetToDo", ReplyAction="http://tempuri.org/IToDoService/GetToDoResponse")]
        System.Threading.Tasks.Task<AdvanceToDoListClient.ToDoService.ToDo> GetToDoAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IToDoService/SaveToDo", ReplyAction="http://tempuri.org/IToDoService/SaveToDoResponse")]
        void SaveToDo(AdvanceToDoListClient.ToDoService.ToDo toDo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IToDoService/SaveToDo", ReplyAction="http://tempuri.org/IToDoService/SaveToDoResponse")]
        System.Threading.Tasks.Task SaveToDoAsync(AdvanceToDoListClient.ToDoService.ToDo toDo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IToDoService/UpdateToDo", ReplyAction="http://tempuri.org/IToDoService/UpdateToDoResponse")]
        AdvanceToDoListClient.ToDoService.ToDo UpdateToDo(AdvanceToDoListClient.ToDoService.ToDo toDo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IToDoService/UpdateToDo", ReplyAction="http://tempuri.org/IToDoService/UpdateToDoResponse")]
        System.Threading.Tasks.Task<AdvanceToDoListClient.ToDoService.ToDo> UpdateToDoAsync(AdvanceToDoListClient.ToDoService.ToDo toDo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IToDoService/DeleteToDo", ReplyAction="http://tempuri.org/IToDoService/DeleteToDoResponse")]
        bool DeleteToDo(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IToDoService/DeleteToDo", ReplyAction="http://tempuri.org/IToDoService/DeleteToDoResponse")]
        System.Threading.Tasks.Task<bool> DeleteToDoAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IToDoService/GetAllToDos", ReplyAction="http://tempuri.org/IToDoService/GetAllToDosResponse")]
        AdvanceToDoListClient.ToDoService.ToDo[] GetAllToDos(string userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IToDoService/GetAllToDos", ReplyAction="http://tempuri.org/IToDoService/GetAllToDosResponse")]
        System.Threading.Tasks.Task<AdvanceToDoListClient.ToDoService.ToDo[]> GetAllToDosAsync(string userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IToDoService/GetAllToDosGrid", ReplyAction="http://tempuri.org/IToDoService/GetAllToDosGridResponse")]
        System.Data.DataSet GetAllToDosGrid(string userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IToDoService/GetAllToDosGrid", ReplyAction="http://tempuri.org/IToDoService/GetAllToDosGridResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAllToDosGridAsync(string userid);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IToDoServiceChannel : AdvanceToDoListClient.ToDoService.IToDoService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ToDoServiceClient : System.ServiceModel.ClientBase<AdvanceToDoListClient.ToDoService.IToDoService>, AdvanceToDoListClient.ToDoService.IToDoService {
        
        public ToDoServiceClient() {
        }
        
        public ToDoServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ToDoServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ToDoServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ToDoServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AdvanceToDoListClient.ToDoService.ToDo GetToDo(int id) {
            return base.Channel.GetToDo(id);
        }
        
        public System.Threading.Tasks.Task<AdvanceToDoListClient.ToDoService.ToDo> GetToDoAsync(int id) {
            return base.Channel.GetToDoAsync(id);
        }
        
        public void SaveToDo(AdvanceToDoListClient.ToDoService.ToDo toDo) {
            base.Channel.SaveToDo(toDo);
        }
        
        public System.Threading.Tasks.Task SaveToDoAsync(AdvanceToDoListClient.ToDoService.ToDo toDo) {
            return base.Channel.SaveToDoAsync(toDo);
        }
        
        public AdvanceToDoListClient.ToDoService.ToDo UpdateToDo(AdvanceToDoListClient.ToDoService.ToDo toDo) {
            return base.Channel.UpdateToDo(toDo);
        }
        
        public System.Threading.Tasks.Task<AdvanceToDoListClient.ToDoService.ToDo> UpdateToDoAsync(AdvanceToDoListClient.ToDoService.ToDo toDo) {
            return base.Channel.UpdateToDoAsync(toDo);
        }
        
        public bool DeleteToDo(int id) {
            return base.Channel.DeleteToDo(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteToDoAsync(int id) {
            return base.Channel.DeleteToDoAsync(id);
        }
        
        public AdvanceToDoListClient.ToDoService.ToDo[] GetAllToDos(string userid) {
            return base.Channel.GetAllToDos(userid);
        }
        
        public System.Threading.Tasks.Task<AdvanceToDoListClient.ToDoService.ToDo[]> GetAllToDosAsync(string userid) {
            return base.Channel.GetAllToDosAsync(userid);
        }
        
        public System.Data.DataSet GetAllToDosGrid(string userid) {
            return base.Channel.GetAllToDosGrid(userid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAllToDosGridAsync(string userid) {
            return base.Channel.GetAllToDosGridAsync(userid);
        }
    }
}
